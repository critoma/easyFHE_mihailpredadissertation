(self["webpackChunkfhe_module_quasar_demo"]=self["webpackChunkfhe_module_quasar_demo"]||[]).push([[725],{3725:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>F});var o=i(9835),n=i(6970);const s={class:"q-mt-md q-pa-lg text-center text-h2 text-bold"},a={class:"q-mt-md text-center text-bold text-h5"},r={class:"q-mt-md text-h6"};function p(e,t,i,p,l,d){const c=(0,o.up)("q-img"),m=(0,o.up)("q-item"),h=(0,o.up)("q-list"),u=(0,o.up)("q-carousel-slide"),g=(0,o.up)("q-carousel"),w=(0,o.up)("q-page");return(0,o.wg)(),(0,o.j4)(w,{class:"row items-center justify-evenly"},{default:(0,o.w5)((()=>[(0,o.Wm)(g,{modelValue:e.slide,"onUpdate:modelValue":t[0]||(t[0]=t=>e.slide=t),swipeable:"",animated:"",padding:!0,arrows:!0,navigation:!0,"navigation-position":"bottom",style:{height:"80vh",width:"80vw",borderRadius:"12px"},class:"bg-blue-10 text-white rounded-borders shadow-1"},{default:(0,o.w5)((()=>[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(e.slides,((e,t)=>((0,o.wg)(),(0,o.j4)(u,{key:t,name:e.name,class:"column no-wrap flex-center"},{default:(0,o.w5)((()=>[(0,o._)("div",s,(0,n.zw)(e.description.title),1),(0,o.Wm)(c,(0,o.dG)(e.image,{style:e.image.style}),null,16,["style"]),(0,o._)("div",a,(0,n.zw)(e.description.body),1),(0,o._)("div",r,[(0,o.Wm)(h,null,{default:(0,o.w5)((()=>[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(e.description.list,((e,t)=>((0,o.wg)(),(0,o.j4)(m,{key:t},{default:(0,o.w5)((()=>[(0,o.Uk)((0,n.zw)(e),1)])),_:2},1024)))),128))])),_:2},1024)])])),_:2},1032,["name"])))),128))])),_:1},8,["modelValue"])])),_:1})}var l=i(499);const d=(0,o.aZ)({name:"Home",components:{},setup(){const e=(0,l.iH)("Home");return{slide:e}},methods:{},computed:{slides(){return[{name:"Home",image:{style:{margin:"25px"},height:"50%",width:"50%",fit:"contain",position:"50% 50%",src:i(4159),"spinner-color":"white"},description:{title:"EasyFHE",body:"Fully Homomorphic Encryption for everyone",list:[]}},{name:"How",image:{style:{margin:"25px"},height:"70%",width:"70%",fit:"contain",position:"50% 30%",src:i(910),"spinner-color":"white"},description:{title:"How it's working?",body:"Place some data as input, encrypt it, make homomorphic computations, decrypt it to see the results",list:[]}},{name:"Components",image:{style:{margin:"25px"},height:"60%",width:"60%",fit:"contain",position:"50% 50%",src:i(1631),"spinner-color":"white"},description:{title:"Components",body:"EasyFHE is made of 3 components: Plain, Setup and Cipher module.",list:["Setup deals with the homomorphic module initialization","Plain manages operations done between plaintext and ciphertexts.","Cipher handles operations done between cipertexts."]}},{name:"EasyFHEFeatures",image:{style:{margin:"25px"},height:"40%",width:"40%",fit:"contain",position:"50% 50%",src:i(5147),"spinner-color":"white"},description:{title:"Features of",body:"EasyFHE handles the key generation and the encryption-decryption process. It has the following functions:",list:["generateKeys() - Generates a key pair","encrypt() - Encrypts data","decrypt() - Decrypts a ciphertext","deallocateLibrary() - Frees up the memory occupied by module"]}},{name:"SetupFeatures",image:{style:{margin:"25px"},height:"40%",width:"40%",fit:"contain",position:"50% 50%",src:i(4578),"spinner-color":"white"},description:{title:"Features of",body:"Setup deals with the homomorphic module initialization. It has the following functions:",list:["initialize() - initializes the bindings between EasyFHE and SEAL library","setScheme() - Sets a supported homomorphic encryption scheme","setContext() - Sets the specific encryption parameters","fastSetup() - Simplified setup done in one stop"]}},{name:"PlainFeatures",image:{style:{margin:"25px"},height:"40%",width:"40%",fit:"contain",position:"50% 50%",src:i(79),"spinner-color":"white"},description:{title:"Features of",body:"Plain manages operations done between plaintext and ciphertexts. It has the following functions:",list:["add() - Adds a plaintext to a ciphertext","sub() - Subtracts a plaintext from a ciphertext","multiply() - Multiply a ciphertext with a plaintext"]}},{name:"CipherFeatures",image:{style:{margin:"25px"},height:"40%",width:"40%",fit:"contain",position:"50% 50%",src:i(396),"spinner-color":"white"},description:{title:"Features of",body:"Cipher handles operations done between cipertexts. It has the following functions:",list:["add() - Adds two ciphertexts","sub() - Subtracts a ciphertext from a ciphertext","multiply() - Multiply two ciphertexts","square() - Squares a ciphertext","exponentiate() - Applying exponentiation on a ciphertext","negate() - Flip the ciphertext values"]}},{name:"Questions",image:{style:{margin:"25px"},height:"40%",width:"40%",fit:"contain",position:"50% 50%",src:i(4583),"spinner-color":"white"},description:{title:"Questions",body:"Preda Mihail Irinel",list:["mihaipreda1997@gmail.com","github.com/mihailpreda/","linkedin.com/in/mihail-irinel-preda/"]}}]}}});var c=i(1639),m=i(9885),h=i(960),u=i(1694),g=i(335),w=i(3246),y=i(490),x=i(9984),f=i.n(x);const b=(0,c.Z)(d,[["render",p]]),F=b;f()(d,"components",{QPage:m.Z,QCarousel:h.Z,QCarouselSlide:u.Z,QImg:g.Z,QList:w.Z,QItem:y.Z})},910:(e,t,i)=>{e.exports=i.p+"img/2slide.drawio.25081dac.png"},1631:(e,t,i)=>{e.exports=i.p+"img/3slide.drawio.e936310f.png"},4578:(e,t,i)=>{e.exports=i.p+"img/4slide.drawio.d9d4237c.png"},79:(e,t,i)=>{e.exports=i.p+"img/5slide.drawio.1905f31f.png"},396:(e,t,i)=>{e.exports=i.p+"img/6slide.drawio.0bf70e24.png"},5147:(e,t,i)=>{e.exports=i.p+"img/7slide.drawio.d95f564b.png"},4583:(e,t,i)=>{e.exports=i.p+"img/8slide.drawio.aa07b01c.png"},4159:(e,t,i)=>{e.exports=i.p+"img/easyFhelogo.b8ae680d.png"}}]);